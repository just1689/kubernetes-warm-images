---
# Source: nats/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: wi-nats
  namespace: warm-images
  labels:
    app.kubernetes.io/name: nats
    helm.sh/chart: nats-6.3.12
    app.kubernetes.io/instance: wi-nats
    app.kubernetes.io/managed-by: Helm
data:
  nats-server.conf: |-
    listen: 0.0.0.0:4222
    http: 0.0.0.0:8222

    # Authorization for client connections
    authorization {
      user: "nats_client"
      password: "sY6GYz5c9W"
      timeout:  1
    }

    # Logging options
    debug: false
    trace: false
    logtime: false

    # Pid file
    pid_file: "/tmp/nats-server.pid"

    # Some system overrides


    # Clustering definition
    cluster {
      listen: 0.0.0.0:6222

      # Authorization for cluster connections
      authorization {
        user: "nats_cluster"
        password: "DWubkqfbG8"
        timeout:  1
      }

      # Routes are actively solicited and connected to from this server.
      # Other servers can connect to us if they supply the correct credentials
      # in their routes definitions from above
      routes = [
        nats://nats_cluster:DWubkqfbG8@wi-nats-cluster:6222
      ]
    }
---
# Source: nats/templates/client-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: wi-nats-client
  namespace: warm-images
  labels:
    app.kubernetes.io/name: nats
    helm.sh/chart: nats-6.3.12
    app.kubernetes.io/instance: wi-nats
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 4222
      targetPort: client
      name: tcp-client
  selector: 
    app.kubernetes.io/name: nats
    app.kubernetes.io/instance: wi-nats
---
# Source: nats/templates/cluster-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: wi-nats-cluster
  namespace: warm-images
  labels:
    app.kubernetes.io/name: nats
    helm.sh/chart: nats-6.3.12
    app.kubernetes.io/instance: wi-nats
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 6222
      targetPort: cluster
      name: tcp-cluster
  selector: 
    app.kubernetes.io/name: nats
    app.kubernetes.io/instance: wi-nats
---
# Source: nats/templates/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: wi-nats-headless
  namespace: warm-images
  labels:
    app.kubernetes.io/name: nats
    helm.sh/chart: nats-6.3.12
    app.kubernetes.io/instance: wi-nats
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: tcp-client
      port: 4222
      targetPort: client
    - name: tcp-cluster
      port: 6222
      targetPort: cluster
  selector: 
    app.kubernetes.io/name: nats
    app.kubernetes.io/instance: wi-nats
---
# Source: nats/templates/monitoring-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: wi-nats-monitoring
  namespace: warm-images
  labels:
    app.kubernetes.io/name: nats
    helm.sh/chart: nats-6.3.12
    app.kubernetes.io/instance: wi-nats
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8222
      targetPort: monitoring
      name: tcp-monitoring
  selector: 
    app.kubernetes.io/name: nats
    app.kubernetes.io/instance: wi-nats
---
# Source: nats/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: wi-nats
  namespace: warm-images
  labels:
    app.kubernetes.io/name: nats
    helm.sh/chart: nats-6.3.12
    app.kubernetes.io/instance: wi-nats
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  serviceName: wi-nats-headless
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: nats
      app.kubernetes.io/instance: wi-nats
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nats
        helm.sh/chart: nats-6.3.12
        app.kubernetes.io/instance: wi-nats
        app.kubernetes.io/managed-by: Helm
    spec:
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: nats
                    app.kubernetes.io/instance: wi-nats
                namespaces:
                  - "warm-images"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      containers:
        - name: nats
          image: reg.captainjustin.space/docker.io/bitnami/nats:2.3.2-debian-10-r0
          imagePullPolicy: IfNotPresent
          command:
            - nats-server
          args:
            - -c
            - /opt/bitnami/nats/nats-server.conf
            # to ensure nats could run with non-root user, we put the configuration
            # file under `/opt/bitnami/nats/nats-server.conf`, please check the link below
            # for the implementation inside Dockerfile:
            # - https://github.com/bitnami/bitnami-docker-nats#configuration
          ports:
            - name: client
              containerPort: 4222
            - name: cluster
              containerPort: 6222
            - name: monitoring
              containerPort: 8222
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /
              port: monitoring
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /
              port: monitoring
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: config
              mountPath: /opt/bitnami/nats/nats-server.conf
              subPath: nats-server.conf
      volumes:
        - name: config
          configMap:
            name: wi-nats
